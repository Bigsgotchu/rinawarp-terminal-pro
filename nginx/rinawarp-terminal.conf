# Nginx configuration for RinaWarp Terminal
# Place this file in /etc/nginx/sites-available/ and create a symlink to sites-enabled/

server {
    listen 80;
    listen [::]:80;
    server_name terminal.rinawarptech.com;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name terminal.rinawarptech.com;

    # SSL Configuration (update with your certificate paths)
    ssl_certificate /etc/letsencrypt/live/terminal.rinawarptech.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/terminal.rinawarptech.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.logrocket.io https://cdn.sentry.io; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.logrocket.io https://sentry.io wss://terminal.rinawarptech.com;" always;

    # Root directory for RinaWarp Terminal web assets
    root /var/www/rinawarp-terminal/dist;
    index index.html;

    # Logging
    access_log /var/log/nginx/rinawarp-terminal.access.log;
    error_log /var/log/nginx/rinawarp-terminal.error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Main application
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Source maps - restricted access for Sentry
    location ~ ^/static/dist/(.+)\.map$ {
        alias /var/www/rinawarp-terminal/dist/static/dist/$1.map;
        
        # Sentry IP addresses
        allow 35.184.238.160/32;
        allow 104.155.159.182/32;
        allow 104.155.149.19/32;
        allow 130.211.230.102/32;
        
        # Additional Sentry IPs (as of 2024)
        allow 34.120.195.249/32;
        allow 34.102.136.180/32;
        
        # Deny all other access
        deny all;
        
        # Disable caching for source maps
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # API proxy (if you have a backend API)
    location /api/ {
        proxy_pass http://localhost:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # WebSocket support for terminal sessions
    location /ws/ {
        proxy_pass http://localhost:3000/ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Monitoring endpoints (restrict access)
    location /metrics {
        # Only allow access from monitoring services
        allow 10.0.0.0/8;     # Internal network
        allow 172.16.0.0/12;  # Internal network
        allow 192.168.0.0/16; # Internal network
        deny all;
        
        proxy_pass http://localhost:3000/metrics;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
    }
    
    location ~ \.(env|git|yml|yaml|conf|ini)$ {
        deny all;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        internal;
    }
    
    location = /50x.html {
        internal;
    }
}

