{
  "name": "rinawarp-terminal",
  "version": "1.1.0",
  "description": "RinaWarp Terminal - An advanced commercial terminal emulator with AI assistance, themes, and enterprise features",
  "main": "src/main.cjs",
  "type": "module",
  "build": {
    "productName": "RinaWarp Terminal",
    "appId": "com.rinawarptech.terminal",
    "copyright": "Copyright Â© 2025 Rinawarp Technologies, LLC",
    "directories": {
      "output": "dist",
      "buildResources": "assets"
    },
    "files": [
      "src/**/*",
      "public/**/*",
      "styles/**/*",
      "!src/tests/**/*",
      "!tests/**/*",
      "!**/*.test.js",
      "!dist",
      "!build",
      "!*.md",
      "!.git*",
      "!.env*",
      "!test-*.cjs"
    ],
    "extraResources": [
      {
        "from": "public",
        "to": "public",
        "filter": [
          "**/*"
        ]
      }
    ],
    "npmRebuild": false,
    "buildDependenciesFromSource": false,
    "nodeGypRebuild": false,
    "forceCodeSigning": false,
    "win": {
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "assets/ico/rinawarp-mermaid-icon.ico",
      "verifyUpdateCodeSignature": true
    },
    "mac": {
      "target": [
        {
          "target": "dmg",
          "arch": "x64"
        }
      ],
      "icon": "assets/icns/rinawarp-mermaid-icon.icns",
      "category": "public.app-category.developer-tools",
      "identity": null,
      "gatekeeperAssess": false,
      "hardenedRuntime": true,
      "entitlements": "build/entitlements.mac.plist",
      "entitlementsInherit": "build/entitlements.mac.plist",
      "notarize": false,
      "signIgnore": "(.*)",
      "dmg": {
        "title": "${productName} ${version}",
        "icon": "assets/icns/rinawarp-mermaid-icon.icns",
        "background": "public/dmg-assets/dmg-background.png",
        "contents": [
          {
            "x": 150,
            "y": 200,
            "type": "file"
          },
          {
            "x": 400,
            "y": 200,
            "type": "link",
            "path": "/Applications"
          }
        ],
        "window": {
          "width": 600,
          "height": 400
        },
        "iconSize": 100,
        "iconTextSize": 12,
        "artifactName": "RinaWarp-Terminal-macOS.dmg"
      }
    },
    "linux": {
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "tar.gz",
          "arch": [
            "x64"
          ]
        }
      ],
      "icon": "assets/png/icon-512.png",
      "category": "Development"
    },
    "publish": [
      {
        "provider": "github",
        "owner": "Rinawarp-Terminal",
        "repo": "rinawarp-terminal"
      }
    ]
  },
  "author": {
    "name": "Rinawarp Technologies, LLC",
    "email": "rinawarptechnologies25@gmail.com",
    "url": "https://rinawarptech.com"
  },
  "homepage": "https://rinawarptech.com",
  "repository": {
    "type": "git",
    "url": "https://github.com/Rinawarp-Terminal/rinawarp-terminal.git"
  },
  "license": "PROPRIETARY",
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=9.0.0"
  },
  "scripts": {
    "test:perf": "jest --config jest.perf.config.js",
    "analyze": "ANALYZE=true npm run build",
    "lighthouse": "lhci autorun",
    "bundlesize": "bundlesize",
    "prestart": "node scripts/macos-electron-optimize.js 2>/dev/null || true",
    "start": "ELECTRON_DISABLE_GPU_SANDBOX=1 ELECTRON_NO_ATTACH_CONSOLE=1 electron src/main.cjs",
    "dev": "ELECTRON_DISABLE_GPU_SANDBOX=1 electron src/main.cjs --dev",
    "dev:full": "NODE_ENV=development DEVELOPER_MODE=true electron src/main.cjs --dev",
    "build:dev": "npm run copy-assets && DEVELOPER_MODE=true electron-builder",
    "build": "npm run copy-assets && npm run test && electron-builder",
    "test": "jest",
    "test:quick": "jest --passWithNoTests --maxWorkers=2",
    "test:ci": "jest --passWithNoTests --maxWorkers=2 --ci || echo 'Tests have known issues, continuing build'",
    "lint": "eslint . --ext .js,.ts,.cjs --fix && prettier --write . --ignore-unknown",
    "copy-assets": "node scripts/copy-assets.cjs",
    "build:web": "webpack --mode=production",
    "build:linux": "npm run copy-assets && electron-builder --linux",
    "build:mac": "npm run copy-assets && electron-builder --mac --publish=never",
    "build:all": "npm run copy-assets && npm run test && electron-builder --win --mac --linux",
    "build:releases": "node scripts/build-releases.js",
    "download:releases": "node scripts/download-releases.js",
    "check:build-status": "node scripts/check-build-status.js",
    "release": "node scripts/release.cjs patch",
    "release:major": "node scripts/release.cjs major",
    "release:minor": "node scripts/release.cjs minor",
    "release:patch": "node scripts/release.cjs patch",
    "experimental:ai": "node src/ai-enhancements/enhanced-context-engine.js",
    "experimental:voice": "node src/voice-enhancements/enhanced-voice-engine.js",
    "experimental:ui": "node src/ui-enhancements/modern-theme-system.js",
    "validate:config": "node scripts/validate-config.js",
    "security:check": "npm audit --audit-level=moderate && npm run scan:deprecated",
    "scan:deprecated": "node scan-deprecated.cjs",
    "init:dev": "node scripts/init-developer-mode.cjs",
    "generate:icons": "node scripts/generate-mermaid-icons.cjs",
    "build:beta": "node scripts/build-beta.cjs",
    "prepare:beta": "node scripts/prepare-beta-release.cjs",
    "test:beta": "npm test -- --passWithNoTests || echo \"Tests have known issues in beta\"",
    "clean:beta": "rm -rf beta-release dist"
  },
  "dependencies": {
    "@xterm/addon-web-links": "^0.11.0",
    "cors": "^2.8.5",
    "express": "^4.21.2",
    "express-rate-limit": "^7.5.1",
    "helmet": "^8.1.0",
    "joi": "^17.13.3",
    "jsonwebtoken": "^9.0.2",
    "morgan": "^1.10.0",
    "node-fetch": "^3.3.2",
    "nodemailer": "^6.9.8",
    "os-browserify": "^0.3.0",
    "path-browserify": "^1.0.1",
    "stream-browserify": "^3.0.0",
    "stripe": "^14.12.0",
    "ws": "^8.18.0"
  },
  "devDependencies": {
    "@babel/plugin-syntax-dynamic-import": "7.8.3",
    "@babel/plugin-transform-modules-commonjs": "7.27.1",
    "@babel/preset-env": "7.28.0",
    "@babel/preset-typescript": "7.27.1",
    "@electron/packager": "18.3.6",
    "@jest/globals": "30.0.4",
    "@xterm/addon-fit": "0.10.0",
    "@xterm/xterm": "5.5.0",
    "archiver": "7.0.1",
    "assert": "2.1.0",
    "autoprefixer": "10.4.21",
    "babel-jest": "30.0.4",
    "babel-loader": "10.0.0",
    "buffer": "6.0.3",
    "clean-webpack-plugin": "4.0.0",
    "copy-webpack-plugin": "12.0.2",
    "core-js": "3.44.0",
    "css-loader": "7.1.2",
    "css-minimizer-webpack-plugin": "7.0.2",
    "dmg-license": "1.0.11",
    "dotenv": "17.2.0",
    "electron": "37.2.3",
    "electron-builder": "26.0.12",
    "eslint": "9.31.0",
    "html-loader": "5.1.0",
    "html-webpack-plugin": "5.6.3",
    "husky": "9.1.7",
    "jest": "30.0.4",
    "jest-circus": "30.0.4",
    "jest-environment-jsdom": "30.0.4",
    "jest-jasmine2": "30.0.4",
    "json5-loader": "4.0.1",
    "kleur": "4.1.5",
    "lint-staged": "16.1.2",
    "mini-css-extract-plugin": "2.9.2",
    "monaco-editor": "0.52.2",
    "monaco-editor-webpack-plugin": "7.1.0",
    "postcss": "8.5.6",
    "postcss-cli": "11.0.1",
    "postcss-loader": "8.1.1",
    "prettier": "3.6.2",
    "process": "0.11.10",
    "raw-loader": "4.0.2",
    "regenerator-runtime": "0.14.1",
    "sass": "1.89.2",
    "sass-loader": "16.0.5",
    "source-map-loader": "5.0.0",
    "style-loader": "4.0.0",
    "tailwindcss": "3.4.17",
    "terser-webpack-plugin": "5.3.14",
    "url": "0.11.4",
    "webpack": "5.100.2",
    "webpack-bundle-analyzer": "4.10.2",
    "webpack-cli": "6.0.1",
    "webpack-dev-server": "5.2.2",
    "webpack-merge": "6.0.1",
    "worker-loader": "3.0.8"
  },
  "optionalDependencies": {
    "dmg-license": "1.0.11"
  },
  "overrides": {
    "rimraf": "^4.4.1",
    "glob": "^11.0.3",
    "@npmcli/move-file": "@npmcli/fs"
  },
  "lint-staged": {
    "*.{js,cjs,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,css,scss,yaml,yml}": [
      "prettier --write"
    ]
  },
  "betaFeatures": {
    "aiProviders": true,
    "experimentalUI": true
  }
}
