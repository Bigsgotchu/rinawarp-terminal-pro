{
    "name":  "rinawarp-terminal",
    "version":  "1.0.7",
    "description":  "RinaWarp Terminal - An advanced commercial terminal emulator with AI assistance, themes, and enterprise features",
    "main":  "src/main.js",
    "author":  {
                   "name":  "RinaWarp Technologies",
                   "email":  "rinawarptechnologies25@gmail.com",
                   "url": "https://rinawarp-terminal-app.web.app"
               },
    "homepage": "https://rinawarp-terminal-app.web.app",
    "repository":  {
                       "type":  "git",
                       "url":  "https://github.com/Bigsgotchu/rinawarp-terminal"
                   },
    "license":  "PROPRIETARY",
    "scripts":  {
                    "start":  "electron src/main.js",
                    "server":  "node server.js",
                    "server-dev":  "nodemon server.js",
                    "test":  "jest",
                    "dev":  "electron src/main.js --dev",
                    "lint":  "eslint .",
                    "format":  "prettier --write .",
                    "format:check":  "prettier --check .",
                    "build":  "electron-builder",
                    "build:dir":  "electron-builder --dir",
                    "build:win":  "electron-builder --win",
                    "build:mac":  "electron-builder --mac",
                    "build:linux":  "electron-builder --linux",
                    "build:all":  "electron-builder --win --mac --linux",
                    "build:portable":  "electron-builder --win portable",
                    "build:nsis":  "electron-builder --win nsis",
                    "build:dmg":  "electron-builder --mac dmg",
                    "build:pkg":  "electron-builder --mac pkg",
                    "build:mas":  "electron-builder --mac mas",
                    "build:appimage":  "electron-builder --linux AppImage",
                    "build:snap":  "electron-builder --linux snap",
                    "build:deb":  "electron-builder --linux deb",
                    "build:rpm":  "electron-builder --linux rpm",
                    "build:tar.gz":  "electron-builder --linux tar.gz",
                    "build:appx":  "electron-builder --win appx",
                    "obfuscate":  "node obfuscation-config.js obfuscate",
                    "obfuscate:verify":  "node obfuscation-config.js verify",
                    "obfuscate:all":  "node obfuscation-config.js all",
                    "build:protected":  "npm run obfuscate:all \u0026\u0026 npm run build",
                    "publish":  "electron-builder --publish=always",
                    "publish:github":  "electron-builder --publish=always --config.publish.provider=github",
                    "publish:s3":  "electron-builder --publish=always --config.publish.provider=s3",
                    "dist":  "electron-builder --publish=never",
                    "dist:win":  "npm run build:win \u0026\u0026 npm run publish",
                    "dist:mac":  "npm run build:mac \u0026\u0026 npm run publish",
                    "dist:linux":  "npm run build:linux \u0026\u0026 npm run publish",
                    "release":  "electron-builder --publish=always",
                    "release:patch":  "npm version patch \u0026\u0026 npm run release",
                    "release:minor":  "npm version minor \u0026\u0026 npm run release",
                    "release:major":  "npm version major \u0026\u0026 npm run release",
                    "prepack":  "npm run lint \u0026\u0026 npm run test",
                    "postinstall":  "electron-builder install-app-deps",
                    "clean":  "echo \"Clean script not configured yet\"",
                    "rebuild":  "npm run clean \u0026\u0026 npm install \u0026\u0026 npm run build",
                    "license-server":  "node scripts/start-license-server.js",
                    "ip-monitor":  "node scripts/start-ip-monitor.js",
                    "services":  "concurrently \"npm run license-server\" \"npm run ip-monitor\"",
                    "services:dev":  "concurrently --kill-others-on-fail \"npm run license-server\" \"npm run ip-monitor\"",
                    "security:audit":  "npm audit --audit-level=moderate",
                    "security:audit:fix":  "npm audit fix",
                    "security:lint":  "eslint . --config .eslintrc.security.json --ext .js",
                    "security:check":  "npm run security:audit \u0026\u0026 npm run security:lint",
                    "security:outdated":  "npm outdated",
                    "security:full":  "npm run security:check \u0026\u0026 npm run security:outdated",
                    "audit:repository":  "powershell -ExecutionPolicy Bypass -File scripts/maintenance/audit-and-clean.ps1 -DryRun",
                    "audit:repository:fix":  "powershell -ExecutionPolicy Bypass -File scripts/maintenance/audit-and-clean.ps1",
                    "bot:post":  "pwsh -ExecutionPolicy Bypass -File scripts/automation/github-discussion-bot.ps1 -Action post",
                    "bot:tip":  "pwsh -ExecutionPolicy Bypass -File scripts/automation/github-discussion-bot.ps1 -Action tip",
                    "bot:feature":  "pwsh -ExecutionPolicy Bypass -File scripts/automation/github-discussion-bot.ps1 -Action feature",
                    "bot:stats":  "pwsh -ExecutionPolicy Bypass -File scripts/automation/github-discussion-bot.ps1 -Action stats",
                    "bot:all":  "pwsh -ExecutionPolicy Bypass -File scripts/automation/github-discussion-bot.ps1 -Action all",
                    "bot:dry-run":  "pwsh -ExecutionPolicy Bypass -File scripts/automation/github-discussion-bot.ps1 -Action all -DryRun",
                    "bot:schedule:setup":  "pwsh -ExecutionPolicy Bypass -File scripts/automation/schedule-discussion-bot.ps1 -Setup",
                    "bot:schedule:status":  "pwsh -ExecutionPolicy Bypass -File scripts/automation/schedule-discussion-bot.ps1 -Status",
    "bot:schedule:remove": "pwsh -ExecutionPolicy Bypass -File scripts/automation/schedule-discussion-bot.ps1 -Remove",
    "prepare": "husky",
    "test:logging": "node scripts/test-logging.js",
    "console:replace": "node scripts/replace-console-statements.js",
    "telemetry:validate": "node scripts/validate-telemetry.js",
    "telemetry:validate:staging": "NODE_ENV=staging npm run telemetry:validate",
    "telemetry:validate:production": "NODE_ENV=production npm run telemetry:validate",
    "telemetry:test": "node scripts/test-telemetry.js"
                },
    "dependencies":  {
                         "@xterm/addon-fit":  "^0.10.0",
                         "@xterm/addon-web-links":  "^0.11.0",
                         "@xterm/xterm":  "^5.5.0",
                         "axios":  "^1.10.0",
                         "bcrypt":  "^6.0.0",
                         "brace-expansion":  "^4.0.1",
                         "electron-updater":  "^6.1.7",
                         "express":  "^4.21.2",
                         "express-rate-limit":  "^7.5.1",
                         "helmet":  "^8.1.0",
                         "jsonwebtoken":  "^9.0.2",
                         "node-cron":  "^4.1.1",
                         "nodemailer":  "^7.0.3"
                     },
    "devDependencies":  {
                            "@babel/plugin-transform-modules-commonjs":  "^7.27.1",
                            "@babel/preset-env":  "^7.27.2",
                            "@jest/globals":  "^29.7.0",
                            "@types/plist":  "^3.0.5",
                            "@types/verror":  "^1.10.11",
                            "concurrently":  "^9.2.0",
                            "electron":  "^37.1.0",
                            "electron-builder":  "^26.0.12",
                            "eslint":  "^8.57.1",
                            "eslint-plugin-security":  "^3.0.1",
                            "husky":  "^9.1.7",
                            "javascript-obfuscator":  "^4.0.2",
                            "jest":  "^29.7.0",
                            "jest-environment-jsdom":  "^29.7.0",
                            "lint-staged":  "^16.1.2",
                            "nodemon":  "^3.0.1",
                            "prettier":  "^3.6.2",
                            "retire":  "^5.2.7",
                            "webpack":  "^5.96.1",
                            "webpack-cli":  "^6.0.1",
                            "webpack-obfuscator":  "^3.5.1"
                        },
    "optionalDependencies":  {
                                 "dmg-license":  "^1.0.11"
                             },
    "lint-staged":  {
                        "*.{js,jsx,ts,tsx}":  [
                                                  "eslint --fix",
                                                  "prettier --write"
                                              ],
                        "*.{json,md,html,css}":  [
                                                     "prettier --write"
                                                 ]
                    },
    "build":  {
                  "appId":  "com.rinawarp.terminal",
                  "productName":  "RinaWarp Terminal",
                  "directories":  {
                                      "output":  "dist"
                                  },
                  "publish":  {
                                  "provider":  "github",
                                  "owner":  "Bigsgotchu",
                                  "repo":  "rinawarp-terminal"
                              },
                  "files":  [
                                "src/**/*",
                                "assets/**/*",
                                "styles/**/*",
                                "package.json"
                            ],
                  "win":  {
                              "icon":  "assets/ico/rinawarp-terminal.ico",
                              "target":  [
                                             {
                                                 "target":  "nsis",
                                                 "arch":  [
                                                              "x64"
                                                          ]
                                             },
                                             {
                                                 "target":  "portable",
                                                 "arch":  [
                                                              "x64"
                                                          ]
                                             }
                                         ],
                              "verifyUpdateCodeSignature":  false
                          },
                  "mac":  {
                              "icon":  "assets/icns/icon.icns",
                              "category":  "public.app-category.developer-tools",
                              "target":  [
                                             {
                                                 "target":  "dmg",
                                                 "arch":  [
                                                              "x64",
                                                              "arm64"
                                                          ]
                                             },
                                             {
                                                 "target":  "zip",
                                                 "arch":  [
                                                              "x64",
                                                              "arm64"
                                                          ]
                                             }
                                         ]
                          },
                  "linux":  {
                                "icon":  "assets/png/sizes/monogram-mermaid-icon-large-256px.png",
                                "target":  [
                                               {
                                                   "target":  "deb",
                                                   "arch":  [
                                                                "x64"
                                                            ]
                                               }
                                           ]
                            }
              }
}
