name: 🚀 Consolidated CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write

env:
  NODE_VERSION: "20"
  CACHE_VERSION: "v1"

jobs:
  # 🧪 Essential Quality Gates
  validate:
    name: 🔍 Validate Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Run linting
        run: npm run lint
        continue-on-error: true
        
      - name: Run tests
        run: npm test
        
      - name: Security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
        
      - name: Build check
        run: npm run build:web
        
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage/
            *.log
          retention-days: 7

  # 🏗️ Build Application (Only on main/tags)
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: Build application
        run: npm run build:linux
        env:
          NODE_ENV: production
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 14

  # 📊 Summary
  summary:
    name: 📊 Pipeline Summary
    runs-on: ubuntu-latest
    needs: [validate, build]
    if: always()
    
    steps:
      - name: Report Status
        run: |
          echo "## 🎯 Pipeline Results"
          echo "- Validation: ${{ needs.validate.result }}"
          echo "- Build: ${{ needs.build.result }}"
          
          if [ "${{ needs.validate.result }}" = "failure" ]; then
            echo "::error::Code validation failed!"
            exit 1
          else
            echo "::notice::Pipeline completed successfully! ✅"
          fi
