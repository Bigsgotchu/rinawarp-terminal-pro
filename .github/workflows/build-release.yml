name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            platform: mac
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --omit=optional
        
      - name: Install macOS-specific dependencies
        if: matrix.os == 'macos-latest'
        run: npm install dmg-license --no-save

      - name: Run tests
        run: echo "Tests temporarily disabled - focusing on build artifacts"

      - name: Copy assets
        run: npm run copy-assets

      - name: Build Electron app
        run: npm run build:${{ matrix.platform }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true

      - name: List build outputs
        shell: bash
        run: |
          echo "Contents of dist directory:"
          find dist -type f -name "*" 2>/dev/null || echo "No dist directory found"
          echo "Contents of public directory:"
          find public -type f -name "*" 2>/dev/null || echo "No public directory found"
          echo "All installer files in current directory:"
          find . -maxdepth 3 -type f -name "*.exe" -o -name "*.dmg" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.zip" -o -name "*.tar.gz" 2>/dev/null || echo "No installer files found"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: |
            dist/**/*.exe
            dist/**/*.dmg
            dist/**/*.AppImage
            dist/**/*.deb
            dist/**/*.snap
            dist/**/*.zip
            dist/**/*.tar.gz
            dist/**/*.blockmap
            dist/**/*.yml
            public/**/*.exe
            public/**/*.dmg
            public/**/*.AppImage
            public/**/*.deb
            public/**/*.snap
            public/**/*.zip
            public/**/*.tar.gz
          retention-days: 30
          if-no-files-found: warn

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/build-*/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
