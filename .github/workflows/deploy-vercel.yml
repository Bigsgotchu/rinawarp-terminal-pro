name: Deploy to Vercel with Railway Sync

# Explicit permissions for deployment workflow
permissions:
  contents: read
  actions: read
  pull-requests: write  # For commenting on PRs with deployment status
  deployments: write    # For creating deployment status
  statuses: write       # For updating commit status

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    # Explicit job-level permissions for production deployment
    permissions:
      contents: read        # Required to checkout code
      actions: read        # Required to access workflow context
      deployments: write   # Required for deployment status tracking
      statuses: write      # Required for commit status updates
      packages: write      # Required if publishing packages during deployment
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          submodules: recursive
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
      - name: Install Railway CLI
        run: npm install -g @railway/cli
        
      - name: Login to Railway
        run: railway login --token ${{ secrets.RAILWAY_TOKEN }}
        
      - name: Link Railway Project
        run: railway link ${{ secrets.RAILWAY_PROJECT_ID }}
        
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Sync Railway Variables to Vercel
        run: |
          # Get Railway variables
          RAILWAY_VARS=$(railway variables --json)
          
          # Set Stripe variables in Vercel
          echo "$RAILWAY_VARS" | jq -r 'to_entries[] | select(.key | startswith("STRIPE_")) | "\(.key)=\(.value)"' | while read var; do
            varname=$(echo $var | cut -d'=' -f1)
            varvalue=$(echo $var | cut -d'=' -f2-)
            echo "Setting $varname in Vercel..."
            echo "$varvalue" | vercel env add $varname production --token=${{ secrets.VERCEL_TOKEN }} --force || true
          done
        
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  Deploy-Preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    # Explicit job-level permissions for preview deployment
    permissions:
      contents: read        # Required to checkout code
      actions: read        # Required to access workflow context
      pull-requests: write # Required to comment on PRs with preview links
      deployments: write   # Required for deployment status tracking
      statuses: write      # Required for commit status updates
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          submodules: recursive
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
      - name: Install Railway CLI
        run: npm install -g @railway/cli
        
      - name: Login to Railway
        run: railway login --token ${{ secrets.RAILWAY_TOKEN }}
        
      - name: Link Railway Project
        run: railway link ${{ secrets.RAILWAY_PROJECT_ID }}
        
      - name: Install Vercel CLI
        run: npm install -g vercel@latest
        
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Sync Railway Variables to Vercel Preview
        run: |
          # Get Railway variables
          RAILWAY_VARS=$(railway variables --json)
          
          # Set Stripe variables in Vercel Preview
          echo "$RAILWAY_VARS" | jq -r 'to_entries[] | select(.key | startswith("STRIPE_")) | "\(.key)=\(.value)"' | while read var; do
            varname=$(echo $var | cut -d'=' -f1)
            varvalue=$(echo $var | cut -d'=' -f2-)
            echo "Setting $varname in Vercel Preview..."
            echo "$varvalue" | vercel env add $varname preview --token=${{ secrets.VERCEL_TOKEN }} --force || true
          done
        
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
