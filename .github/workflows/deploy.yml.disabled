name: 🚀 RinaWarp Terminal Deploy Pipeline

on:
  push:
    branches:
      - main
      - 'preview-**'
      - 'feature/**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

env:
  NODE_VERSION: '20'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # 🧪 Build and Test Job
  build-and-test:
    name: 🧪 Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🏗️ Build Application
        run: npm run build:web
        
      - name: 🧪 Run Tests
        run: npm test
        
      - name: 📊 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            .next/
            out/
          retention-days: 7

  # 🔁 Vercel Preview Deploy Job
  deploy-vercel-preview:
    if: |
      (startsWith(github.ref, 'refs/heads/preview-') || 
       startsWith(github.ref, 'refs/heads/feature/') ||
       github.event_name == 'pull_request') &&
      !startsWith(github.ref, 'refs/tags/')
    name: ⚡ Vercel Preview Deploy
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: Preview
      url: ${{ steps.deploy.outputs.preview-url }}
    
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🏗️ Build for Preview
        run: npm run build:web
        env:
          NEXT_PUBLIC_ENV: preview
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          
      - name: 🧬 Deploy to Vercel (Preview)
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npm install -g vercel
          
          # Generate dynamic branch name for domain
          BRANCH_NAME="${{ github.ref_name }}"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BRANCH_NAME="pr-${{ github.event.number }}"
          fi
          
          # Clean branch name for URL (replace special chars)
          CLEAN_BRANCH=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
          
          # Deploy to Vercel with dynamic name
          PREVIEW_URL=$(vercel --token=$VERCEL_TOKEN --confirm --name "rinawarp-$CLEAN_BRANCH" --meta branch="$BRANCH_NAME" --meta commit="${{ github.sha }}")
          
          echo "preview-url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "branch-name=$CLEAN_BRANCH" >> $GITHUB_OUTPUT
          
      - name: 📝 Comment Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = '${{ steps.deploy.outputs.preview-url }}';
            const branchName = '${{ steps.deploy.outputs.branch-name }}';
            
            const comment = `🚀 **Preview Deploy Ready!**
            
            🔗 **Preview URL**: ${previewUrl}
            🌊 **Branch**: \`${branchName}\`
            📝 **Commit**: \`${{ github.sha }}\`
            
            Your changes are live and ready for review! 🧜‍♀️✨`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # 🚀 Vercel Production Deploy Job
  deploy-vercel-prod:
    if: startsWith(github.ref, 'refs/tags/v')
    name: 🚀 Vercel Production Deploy
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: production
      url: https://rinawarptech.com
    
    steps:
      - name: 📦 Checkout Code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: 📥 Install Dependencies
        run: npm ci
        
      - name: 🏗️ Build for Production
        run: npm run build:web
        env:
          NEXT_PUBLIC_ENV: production
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          
      - name: 🔥 Deploy to Vercel (Production)
        id: deploy-prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npm install -g vercel
          
          # Extract version from tag
          VERSION="${{ github.ref_name }}"
          
          # Deploy to production with proper alias
          vercel --prod --token=$VERCEL_TOKEN --confirm --name "rinawarp-terminal" --meta version="$VERSION" --meta commit="${{ github.sha }}"
          
          echo "Production deployment completed for version: $VERSION"
          echo "Live at: https://rinawarptech.com"

  # 🔐 Secret Sync Job (Optional)
  sync-secrets:
    if: always() && (needs.deploy-vercel-preview.result == 'success' || needs.deploy-vercel-prod.result == 'success')
    name: 🔐 Sync Environment Secrets
    runs-on: ubuntu-latest
    needs: [deploy-vercel-preview, deploy-vercel-prod]
    
    steps:
      - name: 🔑 Sync Firebase Secrets
        if: secrets.FIREBASE_TOKEN
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          echo "🔄 Syncing Firebase configuration..."
          # Add your Firebase config sync logic here
          echo "✅ Firebase secrets synced successfully"
          
      - name: 🚂 Sync Railway Secrets (Optional)
        if: secrets.RAILWAY_TOKEN
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          echo "🔄 Syncing Railway configuration..."
          # Add your Railway sync logic here
          echo "✅ Railway secrets synced successfully"

  # 📊 Deploy Summary Job
  deploy-summary:
    if: always()
    name: 📊 Deployment Summary
    runs-on: ubuntu-latest
    needs: [build-and-test, deploy-vercel-preview, deploy-vercel-prod, sync-secrets]
    
    steps:
      - name: 📋 Generate Deploy Summary
        run: |
          echo "# 🚀 RinaWarp Terminal Deploy Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Job Results" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status | Duration |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|----------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🧪 Build & Test | ${{ needs.build-and-test.result }} | - |" >> $GITHUB_STEP_SUMMARY
          echo "| ⚡ Preview Deploy | ${{ needs.deploy-vercel-preview.result }} | - |" >> $GITHUB_STEP_SUMMARY
          echo "| 🚀 Production Deploy | ${{ needs.deploy-vercel-prod.result }} | - |" >> $GITHUB_STEP_SUMMARY
          echo "| 🔐 Secret Sync | ${{ needs.sync-secrets.result }} | - |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🌐 Environment URLs" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 **Production**: https://rinawarptech.com" >> $GITHUB_STEP_SUMMARY
          echo "- ⚡ **Preview**: Auto-generated per branch" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔗 Useful Links" >> $GITHUB_STEP_SUMMARY
          echo "- 📚 [Vercel Dashboard](https://vercel.com/dashboard)" >> $GITHUB_STEP_SUMMARY
          echo "- 🔥 [Firebase Console](https://console.firebase.google.com)" >> $GITHUB_STEP_SUMMARY
          echo "- 🐙 [GitHub Actions](https://github.com/${{ github.repository }}/actions)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "🧜‍♀️ *Deploy completed with terminal magic!* ✨" >> $GITHUB_STEP_SUMMARY
