name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]  # Only main branch can deploy to production
  # workflow_dispatch removed to prevent unauthorized deployments

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          submodules: recursive
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Create website directory
        run: |
          mkdir -p website
<<<<<<< HEAD
          # Copy main website files from public directory
          cp public/index.html website/ 2>/dev/null || echo "No index.html found in public/"
          cp public/success.html website/ 2>/dev/null || echo "No success.html found"
          cp public/pricing.html website/ 2>/dev/null || echo "No pricing.html found"
          cp public/download.html website/ 2>/dev/null || echo "No download.html found"
          cp public/beta.html website/ 2>/dev/null || echo "No beta.html found"
          # Copy directories if they exist
          cp -r public/assets website/ 2>/dev/null || echo "No assets directory found"
          cp -r public/styles website/ 2>/dev/null || echo "No styles directory found"
          cp -r public/js website/ 2>/dev/null || echo "No js directory found"
          cp -r public/images website/ 2>/dev/null || echo "No images directory found"
          # Copy any root-level assets if they exist
          cp -r assets website/ 2>/dev/null || echo "No root assets directory found"
          cp hotfix-beta.js website/ 2>/dev/null || echo "No hotfix-beta.js found"
          # Copy test files
          cp test-*.html website/ 2>/dev/null || echo "No test files found"
          # Copy verification and config files
          cp googleb4c21a9fc7fba8ea.html website/ 2>/dev/null || echo "No Google verification file found"
          cp robots.txt website/ 2>/dev/null || echo "No robots.txt found"
          cp sitemap.xml website/ 2>/dev/null || echo "No sitemap.xml found"
          # Copy favicon files if they exist
          cp public/favicon.ico website/ 2>/dev/null || echo "No favicon.ico found"
          cp assets/ico/favicon.ico website/ 2>/dev/null || echo "No favicon.ico found in assets"
          cp assets/favicon.svg website/ 2>/dev/null || echo "No favicon.svg found"
          cp assets/png/favicon.png website/ 2>/dev/null || echo "No favicon.png found"
=======
          # Copy website files from docs directory
          cp docs/index.html website/
          cp docs/pricing.html website/
          cp docs/success.html website/
          # Copy styles directory from docs
          cp -r docs/styles website/ 2>/dev/null || echo "No styles directory found in docs"
          # Copy any assets if they exist
          cp -r assets website/ 2>/dev/null || echo "No assets directory found"
>>>>>>> d490cf6e7537bcb01537a8172f3bf897c709963f
          # List what we're deploying
          echo "Files to be deployed:"
          find website -type f -name "*.html" -o -name "*.css" -o -name "*.js" -o -name "*.png" -o -name "*.jpg" -o -name "*.ico" -o -name "*.svg" | head -30
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './website'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    # Only deploy from main branch pushes (no PRs or manual triggers)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    # Explicit job-level permissions for Pages deployment
    permissions:
      contents: read
      pages: write          # Required to deploy to GitHub Pages
      id-token: write       # Required for OIDC token to deploy to Pages
      actions: read
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
